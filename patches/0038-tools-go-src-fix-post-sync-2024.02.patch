From f4a2263c83e0ee9b036a646c0487a25f21da824f Mon Sep 17 00:00:00 2001
From: The-BB <tun.chen.bo@gmail.com>
Date: Sun, 11 Feb 2024 18:57:44 +0300
Subject: [PATCH 38/39] tools/go-src: fix post-sync, 2024.02

первый - посто переименован (на собственне пакеты пофиг с нумерацией) +
можносинхрить с пакетом
второй - где-то в пакетах вылезло
третий - под CGO_ENABLED (или дальше юзать `-I /opt/lib/$(DYNLINKER)`)
---
 .../{500-entware.patch => 010-entware.patch}  | 50 ++++++++---------
 tools/go-src/patches/020-group-passwd.patch   | 13 +++++
 tools/go-src/patches/030-linuxdynld.patch     | 55 +++++++++++++++++++
 3 files changed, 93 insertions(+), 25 deletions(-)
 rename tools/go-src/patches/{500-entware.patch => 010-entware.patch} (90%)
 create mode 100644 tools/go-src/patches/020-group-passwd.patch
 create mode 100644 tools/go-src/patches/030-linuxdynld.patch

diff --git a/tools/go-src/patches/500-entware.patch b/tools/go-src/patches/010-entware.patch
similarity index 90%
rename from tools/go-src/patches/500-entware.patch
rename to tools/go-src/patches/010-entware.patch
index 24f3b291..c16ad805 100644
--- a/tools/go-src/patches/500-entware.patch
+++ b/tools/go-src/patches/010-entware.patch
@@ -16,17 +16,37 @@
  	"/etc/ssl/certs",               // SLES10/SLES11, https://golang.org/issue/12139
  	"/etc/pki/tls/certs",           // Fedora/RHEL
  	"/system/etc/security/cacerts", // Android
+--- a/src/net/nss.go
++++ b/src/net/nss.go
+@@ -13,7 +13,7 @@ import (
+ )
+ 
+ const (
+-	nssConfigPath = "/etc/nsswitch.conf"
++	nssConfigPath = "/opt/etc/nsswitch.conf"
+ )
+ 
+ var nssConfig nsswitchConfig
+@@ -40,7 +40,7 @@ func getSystemNSS() *nssConf {
+ 
+ // init initializes conf and is only called via conf.initOnce.
+ func (conf *nsswitchConfig) init() {
+-	conf.nssConf = parseNSSConfFile("/etc/nsswitch.conf")
++	conf.nssConf = parseNSSConfFile("/opt/etc/nsswitch.conf")
+ 	conf.lastChecked = time.Now()
+ 	conf.ch = make(chan struct{}, 1)
+ }
 --- a/src/time/zoneinfo_unix.go
 +++ b/src/time/zoneinfo_unix.go
-@@ -18,6 +18,7 @@ import (
- // Many systems use /usr/share/zoneinfo, Solaris 2 has
- // /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ.
+@@ -19,6 +19,7 @@ import (
+ // /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ,
+ // NixOS has /etc/zoneinfo.
  var platformZoneSources = []string{
 +	"/opt/share/zoneinfo/",		// Entware
  	"/usr/share/zoneinfo/",
  	"/usr/share/lib/zoneinfo/",
  	"/usr/lib/locale/TZ/",
-@@ -34,7 +35,7 @@ func initLocal() {
+@@ -36,7 +37,7 @@ func initLocal() {
  	tz, ok := syscall.Getenv("TZ")
  	switch {
  	case !ok:
@@ -35,7 +55,7 @@
  		if err == nil {
  			localLoc = *z
  			localLoc.name = "Local"
-@@ -47,7 +48,7 @@ func initLocal() {
+@@ -49,7 +50,7 @@ func initLocal() {
  		if tz != "" && tz[0] == '/' {
  			if z, err := loadLocation(tz, []string{""}); err == nil {
  				localLoc = *z
@@ -44,23 +64,3 @@
  					localLoc.name = "Local"
  				} else {
  					localLoc.name = tz
---- a/src/net/nss.go
-+++ b/src/net/nss.go
-@@ -13,7 +13,7 @@ import (
- )
- 
- const (
--	nssConfigPath = "/etc/nsswitch.conf"
-+	nssConfigPath = "/opt/etc/nsswitch.conf"
- )
- 
- var nssConfig nsswitchConfig
-@@ -40,7 +40,7 @@ func getSystemNSS() *nssConf {
- 
- // init initializes conf and is only called via conf.initOnce.
- func (conf *nsswitchConfig) init() {
--	conf.nssConf = parseNSSConfFile("/etc/nsswitch.conf")
-+	conf.nssConf = parseNSSConfFile("/opt/etc/nsswitch.conf")
- 	conf.lastChecked = time.Now()
- 	conf.ch = make(chan struct{}, 1)
- }
diff --git a/tools/go-src/patches/020-group-passwd.patch b/tools/go-src/patches/020-group-passwd.patch
new file mode 100644
index 00000000..8ca1e99b
--- /dev/null
+++ b/tools/go-src/patches/020-group-passwd.patch
@@ -0,0 +1,13 @@
+--- a/src/os/user/lookup.go
++++ b/src/os/user/lookup.go
+@@ -7,8 +7,8 @@ package user
+ import "sync"
+ 
+ const (
+-	userFile  = "/etc/passwd"
+-	groupFile = "/etc/group"
++	userFile  = "/opt/etc/passwd"
++	groupFile = "/opt/etc/group"
+ )
+ 
+ var colon = []byte{':'}
diff --git a/tools/go-src/patches/030-linuxdynld.patch b/tools/go-src/patches/030-linuxdynld.patch
new file mode 100644
index 00000000..80c9459a
--- /dev/null
+++ b/tools/go-src/patches/030-linuxdynld.patch
@@ -0,0 +1,55 @@
+--- a/src/cmd/link/internal/amd64/obj.go
++++ b/src/cmd/link/internal/amd64/obj.go
+@@ -62,7 +62,7 @@ func Init() (*sys.Arch, ld.Arch) {
+ 		TLSIEtoLE:        tlsIEtoLE,
+ 
+ 		ELF: ld.ELFArch{
+-			Linuxdynld:     "/lib64/ld-linux-x86-64.so.2",
++			Linuxdynld:     "/opt/lib/ld-linux-x86-64.so.2",
+ 			LinuxdynldMusl: "/lib/ld-musl-x86_64.so.1",
+ 			Freebsddynld:   "/libexec/ld-elf.so.1",
+ 			Openbsddynld:   "/usr/libexec/ld.so",
+--- a/src/cmd/link/internal/arm/obj.go
++++ b/src/cmd/link/internal/arm/obj.go
+@@ -60,7 +60,7 @@ func Init() (*sys.Arch, ld.Arch) {
+ 		PEreloc1:         pereloc1,
+ 
+ 		ELF: ld.ELFArch{
+-			Linuxdynld:     "/lib/ld-linux.so.3", // 2 for OABI, 3 for EABI
++			Linuxdynld:     "/opt/lib/ld-linux.so.3", // 2 for OABI, 3 for EABI
+ 			LinuxdynldMusl: "/lib/ld-musl-arm.so.1",
+ 			Freebsddynld:   "/usr/libexec/ld-elf.so.1",
+ 			Openbsddynld:   "/usr/libexec/ld.so",
+--- a/src/cmd/link/internal/arm64/obj.go
++++ b/src/cmd/link/internal/arm64/obj.go
+@@ -61,7 +61,7 @@ func Init() (*sys.Arch, ld.Arch) {
+ 
+ 		ELF: ld.ELFArch{
+ 			Androiddynld:   "/system/bin/linker64",
+-			Linuxdynld:     "/lib/ld-linux-aarch64.so.1",
++			Linuxdynld:     "/opt/lib/ld-linux-aarch64.so.1",
+ 			LinuxdynldMusl: "/lib/ld-musl-aarch64.so.1",
+ 
+ 			Freebsddynld:   "/usr/libexec/ld-elf.so.1",
+--- a/src/cmd/link/internal/mips/obj.go
++++ b/src/cmd/link/internal/mips/obj.go
+@@ -62,7 +62,7 @@ func Init() (*sys.Arch, ld.Arch) {
+ 		Machoreloc1:      machoreloc1,
+ 
+ 		ELF: ld.ELFArch{
+-			Linuxdynld:     "/lib/ld.so.1",
++			Linuxdynld:     "/opt/lib/ld.so.1",
+ 			LinuxdynldMusl: musl,
+ 
+ 			Freebsddynld:   "XXX",
+--- a/src/cmd/link/internal/x86/obj.go
++++ b/src/cmd/link/internal/x86/obj.go
+@@ -59,7 +59,7 @@ func Init() (*sys.Arch, ld.Arch) {
+ 		PEreloc1:         pereloc1,
+ 
+ 		ELF: ld.ELFArch{
+-			Linuxdynld:     "/lib/ld-linux.so.2",
++			Linuxdynld:     "/opt/lib/ld-linux.so.2",
+ 			LinuxdynldMusl: "/lib/ld-musl-i386.so.1",
+ 			Freebsddynld:   "/usr/libexec/ld-elf.so.1",
+ 			Openbsddynld:   "/usr/libexec/ld.so",
-- 
2.30.2

